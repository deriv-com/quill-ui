.quill-input {
    &__container {
        display: flex;
        width: 100%;
        flex-direction: column;
        gap: var(--component-field-spacing-gap-xs);

        .message__container {
            display: flex;
            gap: var(--component-field-spacing-gap-sm);
            justify-content: space-between;
            &--md {
                padding-inline: var(--component-field-spacing-padding-md);
            }
            &--sm {
                padding-inline: var(--component-field-spacing-padding-sm);
            }

            &__status {
                &--neutral {
                    color: var(--component-textIcon-normal-subtle);
                }
                &--success {
                    color: var(--component-textIcon-statusNormal-success);
                }
                &--error {
                    color: var(--component-textIcon-statusNormal-danger);
                }
            }
            &__disabled {
                color: var(--component-textIcon-normal-subtle);
            }

            &__text {
                font-size: var(
                    --semantic-typography-caption-regular-default-fontSize
                );
                line-height: var(
                    --semantic-typography-caption-regular-default-lineHeight
                );
                font-weight: var(
                    --semantic-typography-caption-regular-default-fontWeight
                );
                font-family: var(
                    --semantic-typography-caption-regular-default-fontFamily
                );
            }
        }
        .icon_wrapper {
            display: flex;
            margin: auto;
        }
    }

    &-icons__wrapper {
        display: flex;
        width: 100%;
        gap: var(--component-field-spacing-gap-sm);
    }
    &__rotate {
        transition-property: transform;
        transition-timing-function: var(--core-motion-ease-400);
        transition-duration: var(--core-motion-duration-200);
        transform: rotate(0);

        &[data-state="open"] {
            transform: rotate(180deg);
        }
    }
    &__icon {
        margin: auto;
        fill: var(--component-textIcon-normal-prominent);
    }

    &-label__wrapper {
        display: flex;
        position: relative;
        flex-grow: 1;

        &:has(input[type="select"]) {
            z-index: -1;
        }

        &:focus-within {
            &:has(label) {
                padding-top: var(--core-spacing-600);
            }

            & > .label {
                top: var(--core-spacing-50);
                &__status--neutral {
                    color: var(--component-field-label-color-focus);
                }
            }
        }

        &--has-value {
            &:has(label) {
                top: var(--core-spacing-50);
                padding-top: var(--core-spacing-600);
            }

            & > .label {
                top: var(--core-spacing-50);
            }
        }
    }

    &-no-label__wrapper {
        display: flex;
        width: 100%;
    }

    &-label__label {
        margin: auto var(--core-spacing-200) auto;

        &--right {
            margin-left: var(--core-spacing-200);
        }
    }

    &__wrapper {
        width: 100%;
        align-items: center;
        font-family: var(--core-fontFamily-ibmPlex-sans);
        overflow: hidden;
        position: relative;
        display: flex;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;

        &:has(input:disabled) {
            cursor: not-allowed;

            .label {
                color: var(--component-field-label-color-disabled);
            }

            svg {
                fill: var(--component-field-label-color-disabled);
            }
        }
        &:hover {
            transition-property: border;
            transition-timing-function: var(--core-motion-ease-400);
            transition-duration: var(--core-motion-duration-200);
        }
        &__variant {
            &--outline {
                z-index: 1;
                background-color: var(--component-field-bg-outline-default);
                border: var(--component-field-border-width) solid
                    var(--component-field-border-color-default);

                &:has(input:disabled) {
                    border-color: var(--component-field-border-color-default);
                }

                &--neutral {
                    &:hover {
                        border-color: var(--component-field-border-color-hover);
                    }
                    &:focus-within,
                    &:focus {
                        border-color: var(--component-field-border-color-focus);
                    }
                }

                &--success {
                    border-color: var(
                        --component-field-border-color-successDefault
                    );
                    &:hover {
                        border-color: var(
                            --component-field-border-color-successHover
                        );
                    }
                    &:focus-within,
                    &:focus {
                        border-color: var(
                            --component-field-border-color-successFocus
                        );
                    }
                }

                &--error {
                    border-color: var(
                        --component-field-border-color-failDefault
                    );
                    &:hover {
                        border-color: var(
                            --component-field-border-color-failHover
                        );
                    }
                    &:focus-within,
                    &:focus {
                        border-color: var(
                            --component-field-border-color-failFocus
                        );
                    }
                }
            }

            &--fill {
                border: var(--component-field-border-width) solid transparent;
                &:has(input:disabled) {
                    background-color: var(--component-field-bg-fill-default);
                }

                &--neutral {
                    background-color: var(--component-field-bg-fill-default);
                    &:hover {
                        background-color: var(--component-field-bg-fill-hover);
                    }
                    &:focus-within,
                    &:focus {
                        border: var(--component-field-border-width) solid
                            var(--component-field-border-color-focus);
                        background-color: var(--component-field-bg-fill-focus);
                    }
                }

                &--success {
                    background-color: var(
                        --component-field-bg-fill-successDefault
                    );
                    &:hover {
                        background-color: var(
                            --component-field-bg-fill-successHover
                        );
                    }
                    &:focus-within,
                    &:focus {
                        border: var(--component-field-border-width) solid
                            var(--component-field-border-color-successFocus);
                        background-color: var(
                            --component-field-bg-fill-successFocus
                        );
                    }
                }

                &--error {
                    background-color: var(
                        --component-field-bg-fill-failDefault
                    );
                    &:hover {
                        background-color: var(
                            --component-field-bg-fill-failHover
                        );
                    }
                    &:focus-within,
                    &:focus {
                        border: var(--component-field-border-width) solid
                            var(--component-field-border-color-failFocus);
                        background-color: var(
                            --component-field-bg-fill-failFocus
                        );
                    }
                }
            }
        }

        &__size {
            &--sm {
                padding-inline: var(--component-field-spacing-padding-sm);
                height: var(--component-field-height-sm);
                border-radius: var(--component-field-border-radius-sm);
                gap: var(--component-field-spacing-gap-sm);
            }
            &--md {
                padding-inline: var(--component-field-spacing-padding-md);
                height: var(--component-field-height-md);
                border-radius: var(--component-field-border-radius-md);
                gap: var(--core-spacing-800);
            }
        }

        &-with_button {
            &-right {
                &--sm {
                    padding-inline-end: var(--core-spacing-200);
                    padding-block: var(--core-spacing-200);
                }
                &--md {
                    padding-inline-end: var(--core-spacing-600);
                    padding-block: var(--core-spacing-600);
                }
            }

            &-bottom {
                &--md {
                    flex-direction: column;
                    height: auto;
                    padding: var(--component-field-spacing-padding-md);

                    &--has-label {
                        gap: var(--core-spacing-1200);
                    }

                    &--has-label:has(input:focus),
                    &--has-value {
                        padding-top: var(--temp-static-spacing-7);
                        gap: var(--temp-static-spacing-15);

                        .input {
                            padding-top: var(--core-spacing-300);
                        }
                        .label {
                            top: var(--temp-static-spacing-7);
                        }
                    }

                    &--no-label {
                        padding: var(--component-field-spacing-padding-md);
                        gap: var(--component-field-spacing-padding-md);

                        .input {
                            padding-top: var(--core-spacing-50);
                        }
                    }
                }
                &--sm {
                    flex-direction: column;
                    height: auto;
                    padding-block: var(--core-spacing-200)
                        var(--core-spacing-400);
                    padding-inline: var(--core-spacing-400);
                }
            }
        }

        .input {
            width: 100%;
            background-color: transparent;
            border: none;
            cursor: pointer;
            &:disabled {
                cursor: not-allowed;
            }
            &:disabled + .label {
                cursor: not-allowed;
            }
            &:focus {
                outline: 2px solid transparent;
                outline-offset: 2px;
                color: var(--component-field-label-color-focus);
            }
            &:hover {
                color: var(--component-field-label-color-default);
            }
            &:placeholder-shown {
                color: var(--component-field-placeholder-color);
            }
            &:not(placeholder-shown) {
                color: var(--component-field-label-color-default);
            }
            &:disabled {
                color: var(--component-field-label-color-disabled);
            }

            &:has(~ label) {
                font-size: var(--core-fontSize-100);
                &::placeholder {
                    color: transparent;
                }
                &:focus {
                    &::placeholder {
                        color: var(--component-field-label-color-disabled);
                    }
                }
            }

            &::-webkit-search-decoration,
            &::-webkit-search-cancel-button,
            &::-webkit-search-results-button,
            &::-webkit-search-results-decoration,
            &::-ms-clear,
            &::-ms-reveal {
                display: none;
            }
            &::-ms-clear,
            &::-ms-reveal {
                width: 0;
                height: 0;
            }
            &__align {
                &--left {
                    text-align: left;
                }
                &--center {
                    &:not(:has(~ label)) {
                        text-align: center;
                    }
                }
            }
            &__size {
                &--sm {
                    font-size: var(
                        --semantic-typography-body-sm-regular-default-fontSize
                    );
                    line-height: var(
                        --semantic-typography-body-sm-regular-default-lineHeight
                    );
                }
                &--md {
                    font-size: var(
                        --semantic-typography-body-md-regular-default-fontSize
                    );
                    line-height: var(
                        --semantic-typography-body-md-regular-default-lineHeight
                    );
                }
            }
        }
        .label {
            position: absolute;
            transition-property: all;
            transition-timing-function: var(--core-motion-ease-400);
            transition-duration: var(--core-motion-duration-200);
            display: flex;
            align-items: center;
            width: 100%;
            cursor: pointer;
            left: var(--core-spacing-50);
            gap: var(--semantic-spacing-gap-sm);

            &__status {
                &--neutral {
                    color: var(--component-field-label-color-default);
                }
                &--success {
                    color: var(--component-field-label-color-success);
                }
                &--error {
                    color: var(--component-field-label-color-fail);
                }
            }

            &-field-marker {
                &__required {
                    &--true {
                        color: var(--core-color-solid-red-900);
                    }

                    &--false {
                        color: var(--component-textIcon-normal-disabled);
                    }
                }
            }
        }
        .peer {
            &:placeholder-shown + .label {
                line-height: var(--core-lineHeight-300);
                font-size: var(--core-fontSize-100);
                height: 100%;
            }
            &:focus + .label {
                line-height: var(--core-lineHeight-100);
                font-size: var(--core-fontSize-50);
                height: var(--core-size-600);
                gap: var(--semantic-spacing-gap-sm);

                &-field-marker {
                    font-size: var(
                        --semantic-typography-caption-regular-default-fontSize
                    );
                }
            }
            &:not(placeholder-shown) + .label {
                line-height: var(--core-lineHeight-100);
                font-size: var(--core-fontSize-50);
                height: var(--core-size-600);

                &-field-marker {
                    font-size: var(
                        --semantic-typography-body-md-regular-default-fontSize
                    );
                }
            }
        }

        .status-icon {
            &--neutral {
                fill: var(--component-textIcon-normal-default);
            }
            &--success {
                fill: var(--component-textIcon-statusNormal-success);
            }
            &--error {
                fill: var(--component-textIcon-statusNormal-danger);
            }
        }
    }
}
