

@import '@quill-bundle/typhography.scss';

$headings: hero, h1, h2, h3, h4, h5, h6;
$sizes: xl, lg, md, sm;
$decorations: default, italic, underline, italic-underline;
$weights: regular, bold;

@mixin styleWithSizes($type, $size, $weight, $decoration) {
    font-family: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-fontFamily
    );
    font-size: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-fontSize
    );
    font-style: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-fontWeight
    );
    font-weight: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-fontWeight
    );
    line-height: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-lineHeight
    );
    letter-spacing: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-letterSpacing
    );
    text-decoration: var(
        --semantic-typography-#{$type}-#{$size}-#{$weight}-#{$decoration}-textDecoration
    );
}

@mixin styleNoSizes($type, $weight, $decoration) {
    font-family: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-fontFamily
    );
    font-size: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-fontSize
    );
    font-style: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-fontWeight
    );
    font-weight: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-fontWeight
    );
    line-height: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-lineHeight
    );
    letter-spacing: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-letterSpacing
    );
    text-decoration: var(
        --semantic-typography-#{$type}-#{$weight}-#{$decoration}-textDecoration
    );
}

@mixin customTypeTextStyles($type, $useSize: false) {
    @if $useSize {
        @each $size in $sizes {
            &__size--#{$size} {
                @each $weight in $weights {
                    &__weight--#{$weight} {
                        @each $decoration in $decorations {
                            &__decoration--#{$decoration} {
                                @include styleWithSizes(
                                    $type,
                                    $size,
                                    $weight,
                                    $decoration
                                );
                            }
                        }
                    }
                }
            }
        }
    } @else {
        @each $weight in $weights {
            &__weight--#{$weight} {
                @each $decoration in $decorations {
                    &__decoration--#{$decoration} {
                        @include styleNoSizes($type, $weight, $decoration);
                    }
                }
            }
        }
    }
}

.quill-typography {
    &__color {
        &--prominent {
            color: var(--semantic-color-typography-prominent);
        }
        &--default {
            color: var(--semantic-color-typography-default);
        }
        &--subtle {
            color: var(--semantic-color-typography-subtle);
        }
        &--disabled {
            color: var(--semantic-color-typography-disabled);
        }
    }

    &__caption-text {
        @include customTypeTextStyles(caption);
    }

    @each $heading in $headings {
        &__#{$heading} {
            font-family: var(
                --semantic-typography-heading-#{$heading}-fontFamily
            );
            font-size: var(--semantic-typography-heading-#{$heading}-fontSize);
            font-weight: var(
                --semantic-typography-heading-#{$heading}-fontWeight
            );
            line-height: var(
                --semantic-typography-heading-#{$heading}-lineHeight
            );
            letter-spacing: normal;
        }
    }

    &__code-text {
        @include customTypeTextStyles(code, true);
    }

    &__body-text {
        @include customTypeTextStyles(body, true);
    }
}
